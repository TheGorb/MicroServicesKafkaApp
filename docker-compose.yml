version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    container_name: kafka
    ports:
      - '9092:9092'
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_MESSAGE_MAX_BYTES: "209715200"
      KAFKA_REPLICA_FETCH_MAX_BYTES: "209715200"
    depends_on:
      - zookeeper

  mongodb:
    image: mongo
    ports:
      - "27017:27017"

  customer-management-service:
      container_name: customer-management-service
      build:
        context: .
        dockerfile: customer-management-services/Dockerfile
      ports:
        - "8081:8080"
      depends_on:
        - kafka

#  payment-processing-service:
#    build:
#      context: .
#      dockerfile: payment-processing-services/Dockerfile
#    ports:
#      - "8082:8080"
#    depends_on:
#      - kafka
#
#  balance-services:
#    build:
#      context: .
#      dockerfile: balance-services/Dockerfile
#    ports:
#      - "8083:8080"
#    depends_on:
#      - kafka